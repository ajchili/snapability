{"version":3,"sources":["components/Home.js","components/Post.js","components/Stats.js","App.js","serviceWorker.js","index.js"],"names":["demo","Home","state","post","platform","onPostChange","e","_this","setState","target","value","includes","length","onPlatformChange","onLoadPost","author","status","_post","_this$state","split","props","history","push","concat","alert","_this2","this","react_default","a","createElement","index_es","style","top","left","position","variant","color","onClick","right","Math","floor","random","setTimeout","container","direction","justify","alignItems","height","overflowX","spacing","item","align","xs","sm","id","label","margin","fullWidth","onChange","input","Component","withRouter","allowedTypes","Post","err","content","_fetchTweet","url","axios","method","data","then","res","catch","_fetchPost","username","postId","console","error","_fetchInstagramPost","_fetchContent","type","match","params","location","search","Redirect","to","src","forEach","l","m","image","title","width","marginTop","gutterBottom","component","substring","toUpperCase","map","key","name","size","window","open","Stats","statistics","_fetchData","get","setInterval","_this3","totalPlatformUsage","statistic","usagePerMinute","usage","Date","getTime","time","log","reverse","abc","chart","zoom","enabled","stroke","curve","labels","fill","gradient","shade","gradientToColors","shadeIntensity","opacityFrom","opacityTo","stops","minHeight","overflowY","className","react_apexcharts_min_default","options","series","App","BrowserRouter","Route","exact","path","Boolean","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.670b346b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Button,\n  Input,\n  TextField,\n  Grid,\n  MenuItem,\n  FormHelperText,\n  FormControl,\n  Typography,\n  Select\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\n\nconst demo = [\n  \"https://www.instagram.com/p/BoKXMzqA5rm\",\n  \"https://www.instagram.com/p/Bo2WOtAHRl_/\",\n  \"https://www.instagram.com/p/BpKZxqsnZHA/\",\n  \"https://www.instagram.com/p/BpHuBMrh-m9/\",\n  \"https://www.instagram.com/p/BpMNLgxnuSf/?tagged=exploration\",\n  \"https://ramibains.tumblr.com/post/172413087381/porsche\",\n  \"https://coolcatgroup.tumblr.com/post/179264527036/theawkwardjossy-i-think-we-can-all-agree-chubs\",\n  \"http://krabby-kronicle.tumblr.com/post/168440292876\",\n  \"http://astalavistasta.tumblr.com/post/175234498819/%C3%B6zg%C3%BCrl%C3%BC%C4%9F%C3%BCn-en-b%C3%BCy%C3%BCk-d%C3%BC%C5%9Fman%C4%B1-halinden-memnun-olan\",\n  \"https://twitter.com/JohnMayer/status/1014968418892636160\",\n  \"https://twitter.com/localgringo/status/923198119784931328\",\n  \"https://twitter.com/DaisyOfNland/status/1053923167197192192\",\n  \"https://twitter.com/UNC_Basketball/status/1053350300801818626\",\n  \"https://twitter.com/selfcareviibess/status/1053946313606381574\"\n];\n\nclass Home extends Component {\n  state = {\n    post: \"\",\n    platform: \"\"\n  };\n\n  onPostChange = e => {\n    this.setState({ post: e.target.value });\n    if (e.target.value.includes(\"twitter\")) {\n      this.setState({ platform: \"twitter\" });\n    } else if (e.target.value.includes(\"tumblr\")) {\n      this.setState({ platform: \"tumblr\" });\n    } else if (e.target.value.includes(\"instagram\")) {\n      this.setState({ platform: \"instagram\" });\n    } else if (!e.target.value.length) {\n      this.setState({ platform: \"\" });\n    }\n  };\n\n  onPlatformChange = e => {\n    this.setState({ platform: e.target.value });\n  };\n\n  onLoadPost = () => {\n    const { post, platform } = this.state;\n    let author, status, _post;\n\n    if (!post.length || !platform.length)\n      alert(\"A url and platform are required!\");\n    else {\n      switch (platform) {\n        case \"twitter\":\n          author = post.split(\"com/\")[1].split(\"/\")[0];\n          status = post.split(\"status/\")[1];\n          this.props.history.push(\n            `/post/twitter?author=${author}&?status=${status}`\n          );\n          break;\n        case \"tumblr\":\n          author = post.split(\"://\")[1].split(\"/\")[0];\n          _post = post.split(\"post/\")[1];\n          if (_post.includes(\"/\")) _post = _post.split(\"/\")[0];\n          this.props.history.push(\n            `/post/tumblr?author=${author}&?post=${_post}`\n          );\n          break;\n        case \"instagram\":\n          _post = post.split(\"/p/\")[1];\n          if (_post.includes(\"/\")) _post = _post.split(\"/\")[0];\n          this.props.history.push(`/post/instagram?post=${_post}`);\n          break;\n        default:\n          alert(\"The platform selected is currently unsupported.\");\n          break;\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Button\n          style={{\n            top: 5,\n            left: 5,\n            position: \"absolute\"\n          }}\n          variant=\"text\"\n          color=\"primary\"\n          onClick={() => this.props.history.push('/stats')}\n        >\n          Statistics\n        </Button>\n        <Button\n          style={{\n            top: 5,\n            right: 5,\n            position: \"absolute\"\n          }}\n          variant=\"text\"\n          color=\"primary\"\n          onClick={() => {\n            let post = demo[Math.floor(Math.random() * demo.length)];\n            this.setState({ post });\n            this.onPostChange({ target: { value: post } });\n            setTimeout(() => this.onLoadPost(), 300);\n          }}\n        >\n          Demo\n        </Button>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n          style={{\n            height: \"100vh\",\n            overflowX: \"hidden\"\n          }}\n        >\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={32}\n          >\n            <Grid item>\n              <Typography variant=\"display1\" align=\"center\">\n                Snapability\n              </Typography>\n              <Typography variant=\"caption\" align=\"center\">\n                an accessible way to experience pictures on social media\n                platforms\n              </Typography>\n            </Grid>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n              spacing={32}\n            >\n              <Grid item xs={6} sm={3}>\n                <TextField\n                  id=\"outlined-dense\"\n                  label=\"Enter URL\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                  onChange={this.onPostChange}\n                  value={this.state.post}\n                />\n              </Grid>\n              <Grid item>\n                <FormControl>\n                  <Select\n                    value={this.state.platform}\n                    onChange={this.onPlatformChange}\n                    input={<Input platform=\"platform\" />}\n                  >\n                    <MenuItem value={\"twitter\"}>Twitter</MenuItem>\n                    <MenuItem value={\"tumblr\"}>Tumblr</MenuItem>\n                    <MenuItem value={\"instagram\"}>Instagram</MenuItem>\n                  </Select>\n                  <FormHelperText>Select platform</FormHelperText>\n                </FormControl>\n              </Grid>\n            </Grid>\n            <Grid item>\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={this.onLoadPost}\n              >\n                Search\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Home);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Grid,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  CircularProgress,\n  Chip,\n  Typography\n} from \"@material-ui/core\";\nimport { Redirect, withRouter } from \"react-router-dom\";\n\nconst allowedTypes = [\"twitter\", \"tumblr\", \"instagram\"];\n\nclass Post extends Component {\n  state = {\n    post: null,\n    err: null,\n    content: null\n  };\n\n  _fetchTweet = url => {\n    if (this.state.err || this.state.post) return;\n\n    axios({\n      method: \"POST\",\n      url:\n        \"https://us-central1-snapability-220017.cloudfunctions.net/parseTwitterPost\",\n      data: {\n        url\n      }\n    })\n      .then(res => {\n        this.setState({\n          post: res.data\n        });\n      })\n      .catch(() => {\n        this.setState({\n          err: \"Error parsing tweet.\"\n        });\n      });\n  };\n\n  _fetchPost = (username, postId) => {\n    if (this.state.err || this.state.post) return;\n\n    axios({\n      method: \"POST\",\n      url:\n        \"https://us-central1-snapability-220017.cloudfunctions.net/parseTumblrPost\",\n      data: {\n        username,\n        postId\n      }\n    })\n      .then(res => {\n        this.setState({\n          post: res.data\n        });\n      })\n      .catch(err => {\n        console.error(err);\n        this.setState({\n          err: \"Error parsing tumblr post.\"\n        });\n      });\n  };\n\n  _fetchInstagramPost = post => {\n    if (this.state.err || this.state.post) return;\n\n    axios({\n      method: \"POST\",\n      url:\n        \"https://us-central1-snapability-220017.cloudfunctions.net/parseInstagramPost\",\n      data: {\n        url: `https://www.instagram.com/p/${post}`\n      }\n    })\n      .then(res => {\n        this.setState({\n          post: res.data\n        });\n      })\n      .catch(err => {\n        console.error(err);\n        this.setState({\n          err: \"Error parsing tumblr post.\"\n        });\n      });\n  };\n\n  _fetchContent = url => {\n    if (this.state.content) return;\n\n    axios({\n      method: \"POST\",\n      url:\n        \"https://us-central1-snapability-220017.cloudfunctions.net/predictImage\",\n      data: {\n        url\n      }\n    })\n      .then(res => {\n        this.setState({\n          content: res.data\n        });\n      })\n      .catch(err => console.error(err));\n  };\n\n  render() {\n    let type = this.props.match.params.type;\n    let url = null;\n    if (!allowedTypes.includes(type)) type = null;\n    else {\n      let author, status, username, postId;\n\n      switch (type) {\n        case \"twitter\":\n          author = this.props.location.search.split(\"author=\")[1];\n          status = this.props.location.search.split(\"status=\")[1];\n          if (author && status) {\n            url = `https://twitter.com/${\n              author.split(\"&\")[0]\n            }/status/${status}`;\n            this._fetchTweet(url);\n          } else {\n            return <Redirect to=\"/\" />;\n          }\n          break;\n        case \"tumblr\":\n          username = this.props.location.search\n            .split(\"author=\")[1]\n            .split(\"&\")[0];\n          postId = this.props.location.search.split(\"post=\")[1];\n          url = `https://${username}/post/${postId}`;\n          if (username && postId) {\n            this._fetchPost(username, postId);\n          } else {\n            return <Redirect to=\"/\" />;\n          }\n          break;\n        case \"instagram\":\n          postId = this.props.location.search.split(\"post=\")[1];\n          if (postId) {\n            this._fetchInstagramPost(postId);\n          } else {\n            return <Redirect to=\"/\" />;\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    if (!!this.state.post) {\n      if (type !== \"tumblr\") {\n        this._fetchContent(this.state.post.src);\n      } else {\n        this.state.post.forEach(src => {\n          this._fetchContent(src);\n        });\n      }\n    }\n\n    return (\n      <div>\n        <Button\n          style={{\n            top: 5,\n            left: 5,\n            position: \"absolute\"\n          }}\n          variant=\"text\"\n          color=\"primary\"\n          onClick={() => this.props.history.push(\"/\")}\n        >\n          Back\n        </Button>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n          style={{\n            height: \"100vh\"\n          }}\n        >\n          {type ? (\n            <Grid item l={4} m={6} xs={8} sm={10}>\n              {this.state.post ? ( \n                <Card>\n                  {this.state.post ? (\n                    <CardMedia\n                      image={type !== 'tumblr' ? this.state.post.src : this.state.post[0]}\n                      title={`${type} post provided by user`}\n                      style={{\n                        height: '400px',\n                        width: '100%'\n                      }}\n                    />\n                  ) : (\n                    <Grid\n                      container\n                      direction=\"column\"\n                      justify=\"center\"\n                      alignItems=\"center\"\n                      spacing={8}\n                      style={{\n                        marginTop: '5px'\n                      }}\n                    >\n                      <Grid item>\n                        <CircularProgress />\n                      </Grid>\n                      <Grid item>\n                        <Typography variant=\"caption\">\n                          Loading image...\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                  )}\n                    <CardContent>\n                      <Typography gutterBottom variant=\"headline\" component=\"h2\">\n                        {type.substring(0, 1).toUpperCase()}\n                        {type.substring(1)} Post\n                      </Typography>\n                      {this.state.content ? (\n                        <Grid\n                          container\n                          direction=\"row\"\n                          justify=\"flex-start\"\n                          alignItems=\"center\"\n                          spacing={8}\n                          style={{\n                            marginTop: \"5px\"\n                          }}\n                        >\n                          {this.state.content.map(content => {\n                            return (\n                              <Grid item key={content.name}>\n                                {content.value >= 0.9 && (\n                                  <Chip\n                                    label={content.name}\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                  />\n                                )}\n                                {content.value < 0.9 &&\n                                  content.value >= 0.7 && (\n                                    <Chip\n                                      label={content.name}\n                                      variant=\"outlined\"\n                                    />\n                                  )}\n                                {content.value < 0.7 && (\n                                  <Chip\n                                    label={content.name}\n                                    variant=\"outlined\"\n                                    color=\"secondary\"\n                                  />\n                                )}\n                              </Grid>\n                            );\n                          })}\n                        </Grid>\n                      ) : (\n                        <Grid\n                          container\n                          direction=\"column\"\n                          justify=\"center\"\n                          alignItems=\"center\"\n                          spacing={8}\n                          style={{\n                            marginTop: \"5px\"\n                          }}\n                        >\n                          <Grid item>\n                            <CircularProgress />\n                          </Grid>\n                          <Grid item>\n                            <Typography variant=\"caption\">\n                              Loading descriptions...\n                            </Typography>\n                          </Grid>\n                        </Grid>\n                      )\n                    }\n                    </CardContent>\n                  <CardActions>\n                    <Button \n                      size=\"small\"\n                      color=\"primary\"\n                      onClick={() => window.open(url, '_blank')}\n                    >\n                      Original Post\n                    </Button>\n                    <Button size=\"small\" color=\"primary\">\n                      Share\n                    </Button>\n                  </CardActions>\n                </Card>\n              ) : (\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                  spacing={8}\n                  style={{\n                    marginTop: '5px'\n                  }}\n                >\n                  {this.state.err ? (\n                  <Grid item>\n                    <Typography variant=\"display1\">\n                      There was an error loading this post :(\n                    </Typography>\n                    <Typography variant=\"display4\">\n                      Please refresh the page or try again later\n                    </Typography>\n                  </Grid>\n                  ) : (\n                    <Grid item>\n                      <CircularProgress size={150} />\n                    </Grid>\n                  )}\n                </Grid>\n              )}\n            </Grid>\n          ) : (\n            <Redirect to=\"/\" />\n          )}\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Post);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Grid,\n  Card,\n  CardContent,\n  CircularProgress,\n  Typography\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport Chart from \"react-apexcharts\";\n\nclass Stats extends Component {\n  state = {\n    statistics: null,\n    err: null\n  };\n\n  componentDidMount() {\n    this._fetchData();\n\n    setInterval(() => {\n      this._fetchData();\n    }, 15000);\n  }\n\n  _fetchData = () => {\n    axios.get('https://us-central1-snapability-220017.cloudfunctions.net/fetchStatistics')\n      .then(res => {\n        this.setState({\n          statistics: res.data[0]\n        });\n      })\n      .catch(err => {\n        console.error(err);\n        this.setState({\n          err\n        });\n      });\n  }\n\n  render() {\n    let totalPlatformUsage = [0, 0, 0];\n    if (this.state.statistics) {\n      this.state.statistics.forEach(statistic => {\n        switch (statistic.type) {\n          case \"twitter\":\n            totalPlatformUsage[0]++;\n            break;\n          case \"tumblr\":\n            totalPlatformUsage[1]++;\n            break;\n          case \"instagram\":\n            totalPlatformUsage[2]++;\n            break;\n        }\n      })\n    }\n\n    let usagePerMinute = [{\n      name: 'Twitter',\n      data: [null, null, null, null, null, null, null, null, null, null]\n    }, {\n      name: 'Tumblr',\n      data: [null, null, null, null, null, null, null, null, null, null]\n    }, {\n      name: 'Instagram',\n      data: [null, null, null, null, null, null, null, null, null, null]\n    }];\n    if (this.state.statistics) {\n      this.state.statistics.forEach(statistic => {\n        let usage = Math.floor((new Date().getTime() - statistic.time) / 1000 / 60);\n        console.log(usage);\n        switch (statistic.type) {\n          case \"twitter\":\n            if (usage <= 9) {\n              if (!usagePerMinute[0].data[usage]) usagePerMinute[0].data[usage] = 0; \n              usagePerMinute[0].data[usage]++;\n            }\n            break;\n          case \"tumblr\":\n            if (usage <= 9) {\n              if (!usagePerMinute[1].data[usage]) usagePerMinute[1].data[usage] = 0; \n              usagePerMinute[1].data[usage]++;\n            }\n            break;\n          case \"instagram\":\n            if (usage <= 9) {\n              if (!usagePerMinute[2].data[usage]) usagePerMinute[2].data[usage] = 0; \n              usagePerMinute[2].data[usage]++;\n            }\n            break;\n        }\n      });\n\n      usagePerMinute[0].data.reverse();\n      usagePerMinute[1].data.reverse();\n      usagePerMinute[2].data.reverse();\n    }\n\n\n    let abc = {\n      chart: {\n        type: 'line',\n        zoom: {\n          enabled: false\n        },\n      },\n      stroke: {\n        width: [5,5,4],\n        curve: 'straight'\n      },\n      labels: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].reverse(),\n      fill: {\n        type: 'gradient',\n        gradient: {\n            shade: 'dark',\n            gradientToColors: [ '#FDD835'],\n            shadeIntensity: 1,\n            type: 'horizontal',\n            opacityFrom: 1,\n            opacityTo: 1,\n            stops: [0, 100, 100, 100]\n        },\n      },\n    }\n\n    return (\n      <div>\n        <Button\n          style={{\n            top: 5,\n            left: 5,\n            position: \"absolute\"\n          }}\n          variant=\"text\"\n          color=\"primary\"\n          onClick={() => this.props.history.push(\"/\")}\n        >\n          Back\n        </Button>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n          style={{\n            minHeight: \"100vh\",\n            overflowY: \"scroll\"\n          }}\n        >\n        <Grid item l={4} m={6} xs={8} sm={10}>\n          {this.state.statistics ? (\n            <Grid\n              container\n              direction=\"column\"\n              justify=\"center\"\n              alignItems=\"center\"\n              spacing={32}\n              style={{\n                marginTop: '5px'\n              }}\n            >\n              <Grid item>\n                <Card>\n                  <div className=\"donut\">\n                    <Chart options={{labels: ['Twitter', 'Tumblr', 'Instagram']}} series={totalPlatformUsage} type=\"donut\" />\n                  </div>\n                  <CardContent>\n                    <Typography variant=\"display1\">\n                      All requests ever made using Snapability\n                    </Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n              <Grid item>\n                <Card>\n                  <div className=\"line\">\n                    <Chart options={abc} series={usagePerMinute} type=\"line\" />\n                  </div>\n                  <CardContent>\n                    <Typography variant=\"display1\">\n                      All requests made within the past 10 minutes\n                    </Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n            </Grid>\n          ) : (\n            <Grid\n              container\n              direction=\"column\"\n              justify=\"center\"\n              alignItems=\"center\"\n              spacing={8}\n              style={{\n                marginTop: '5px'\n              }}\n            >\n              {this.state.err ? (\n              <Grid item>\n                <Typography variant=\"display1\">\n                  There was an error loading this post :(\n                </Typography>\n                <Typography variant=\"display4\">\n                  Please refresh the page or try again later\n                </Typography>\n              </Grid>\n              ) : (\n                <Grid item>\n                  <CircularProgress size={150} />\n                </Grid>\n              )}\n            </Grid>\n            )}\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Stats);\n","import React, { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route\n} from 'react-router-dom';\nimport Home from \"./components/Home\";\nimport Post from \"./components/Post\";\nimport Stats from \"./components/Stats\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/post\" component={Post} />\n          <Route path=\"/post/:type\" component={Post} />\n          <Route exact path=\"/stats\" component={Stats} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}